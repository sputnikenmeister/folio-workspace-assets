/**
 * Debug colors
 * @see http://dev.w3.org/csswg/css-color/#named-colors
 * ultralight colors: lavender,seashell,aliceblue,ghostwhite
 */

/* lightblue: 		hsl(195, 53%, 79%) */
$lightblue: hsla(195, 75%, 50%, 1);
/* deepbluesky: 	hsl(195, 100%, 50%) */
$deepskyblue: hsla(195, 100%, 50%, 1);
/* lightcoral: 		hsl(6, 93%, 71%) */
$lightcoral: hsla(6, 93%, 71%, 1);
/* salmon: 			hsl(6, 93%, 71%) */
$salmon: hsla(6, 93%, 71%, 1);
/* thistle: 		hsl(300, 24%, 80%) */
$thistle: hsla(300, 24%, 80%, 1);
/* darkseagreen:	hsl(120, 25%, 65%) */
$darkseagreen: hsla(120, 25%, 50%, 1); //hsl(120, 25%, 65%)
/* darkolivegreen:	hsl(82, 39%, 30%) */
$darkolivegreen: hsla(82, 39%, 50%, 1); //hsl(82, 39%, 30%);
/* indigo:			hsl(275, 100%, 25%); */
$indigo: hsla(275, 100%, 25%, 1);
/* */
$brightyellow: hsl(308, 100%, 50%);
/* Crimson	DC 14 3C	220  20  60 */
$crimsom: rgba(220, 20, 60, 1);

@mixin debug_outline(
		$width: 1px,
		$style: dashed,
		$color: inherit,
		$offset: null,
		$opacity: null) {
	outline: $width $style if($opacity == null, $color, rgba($color, $opacity));
	outline-offset: if($offset == null, -$width, -($width+$offset));
}

// -----------------------------------
// .debug-tx
// -----------------------------------
.debug-tx {
	// *[style*="transition"] {
	// 	@include debug_outline(1px, dotted, $darkseagreen);
	// }
	// #sitename,
	// .transform-wrapper {
	// 	// height: 1rem;
	// 	width: $m_side_width;
	// 	height: $m_nav_height;
	// 	@include media(medium-wide) {
	// 		width: $w_side_width;
	// 		height: $l_nav_height;
	// 	}
	// }
	#navigation.container-changing {
		@include debug_outline(0.5rem, dashed, rgba($lightcoral, 0.25));
	}
	#sitename,
	.article-button {
		&[style*="transition"] {
			@include debug_outline(4px, dashed, rgba($darkseagreen, 0.75));
		}
	}
	#article-list-wrapper,
	#site-name-wrapper {
		&[style*="transition"] {
			@include debug_outline(4px, dashed, rgba($deepskyblue, 0.75));
		}
	}

	.transform-wrapper[style*="transition"] {
		@include debug_outline(2px, solid, rgba($lightcoral, 0.65), 2px);
		// background-color: rgba($lightcoral, 0.5);
	}
	.list-group span[style*="transition"] {
		@include debug_outline(2px, dashed, rgba($lightcoral, 0.65));
		// background-color: rgba($lightcoral, 0.5);
	}
	.list[style*="transition"] {
		@include debug_outline(2px, dashed, rgba($lightcoral, 0.65));
		// background-color: rgba($lightblue, 0.5);
	}
	// .list-item, .list-group {
	// 	&.excluded .label {
	// 		text-decoration: line-through;
	// 	}
	// }

	.carousel,
	.stack {
		&[style*="transition"] {
			@include debug_outline(2px, dashed, rgba($deepskyblue, 0.5));
			outline-style: dashed !important;
		}
	}
}

// -----------------------------------
// .debug-blocks-nav
// -----------------------------------
.debug-blocks-nav {
	// @include debug_outline(0.4rem, solid, rgba($brightyellow, $offset:-0.6rem));
	// #container { @include debug_outline(0.4rem, dashed, rgba($brightyellow, $offset:-0.9rem)); }
	// *[data-cid] {
	// 	@include debug_outline($width: 0.25rem, $style: solid, $color: rgba($thistle, 0.5));
	// }
	// .list-item[data-cid] {
	// 	// @include debug_outline($width: 1px, $style: dashed, $color: rgba($darkseagreen, 0.8));
	// 	background-color: rgba($thistle, 0.8);
	// }

	#navigation {
		@include debug_outline(0.8rem, dashed, rgba($lightcoral, 0.5), -0.4rem);
		&.container-changing {
			@include debug_outline(0.8rem, dashed, rgba($lightcoral, 0.75), -0.4rem);
		}
		#vpan-group {
			@include debug_outline(0.5rem, solid, rgba($crimsom, 0.6), -0.25rem);
		}
		.graph {
			@include debug_outline(0.3rem, dashed, rgba($darkseagreen, 0.25), 0);
			// &:hover, &:active {
			// 	@include debug_outline(0.3rem, dashed, rgba($darkseagreen, 0.75), 0);
			// }
		}
		#article-list-wrapper,
		#site-name-wrapper,
		.list {
			@include debug_outline(1px, solid, Crimson);
			background-color: rgba($lightcoral, 0.1);
		}
		#site-name,
		.article-button,
		.list-group,
		.list-item {
			background-color: rgba($lightcoral, 0.3);
		}
		#site-name a,
		.article-button a,
		.list-group .label span,
		.list-item .label {
			@include debug_outline(1px, solid, $lightcoral);
			// @include debug_outline(1px, solid, $lightcoral);
		}
	}
}

// -----------------------------------
// .debug-blocks-content
// -----------------------------------
.debug-blocks-content {
	#content {
		@include debug_outline(0.5rem, solid, rgba($deepskyblue, 0.25));
		// &:hover {
		// 	@include debug_outline(0.75rem, dashed, rgba($deepskyblue, 0.75));
		// }
		&.container-changing {
			@include debug_outline(0.5rem, dashed, rgba($deepskyblue, 0.6));
		}
		.article-view {
			@include debug_outline(0.5rem, solid, rgba($deepskyblue, 0.3));
			& > * {
				background-color: rgba($lightblue, 0.2);
				@include debug_outline(1px, dashed, $deepskyblue);
			}
		}
		.stack {
			.stack-item {
				@include debug_outline(1px, solid, RoyalBlue);
			}
			.content {
				background-color: rgba($lightblue, 0.1);
				& > * {
					background-color: rgba($lightblue, 0.3);
				}
			}
		}
		.carousel {
			background-color: rgba($lightblue, 0.1);
			@include debug_outline(0.75rem, solid, rgba($deepskyblue, 0.2));
			&.scrolling {
				@include debug_outline(1rem, solid, rgba($deepskyblue, 0.3));
				&.panning {
					@include debug_outline(1rem, solid, rgba($deepskyblue, 0.7));
				}
			}
			// &[style*="transition"] {
			// 	@include debug_outline(0.25rem, dashed, rgba($deepskyblue, 0.5));
			// 	outline-style: dashed !important;
			// }
		}
		.carousel-item {
			// @include debug_outline($color: $deepskyblue);
			// @include debug_outline(1px, solid, $deepskyblue, 0.5);
			@include debug_outline(1px, solid, RoyalBlue);
		}
		.empty-item {
			// @include debug_outline(1px, solid, RoyalBlue);
			.content {
				@include debug_outline(1px, solid, $deepskyblue);
				background-color: rgba($lightblue, 0.3);
			}
		}
		.media-item {
			background-color: rgba($lightblue, 0.3);
		}
		.playable-item {
			.play-toggle-hitarea {
				// background-color: rgba($lightblue, 0.5);
				@include debug_outline(1.5rem, dashed, rgba(RoyalBlue, 0.25));
			}
		}
	}
}

// -----------------------------------
// debug labels
// -----------------------------------
%debug-label-small {
	font: 800 8px/120% $small_font;
	text-transform: uppercase;
	letter-spacing: normal;
	height: 1.2em;
	padding: 0.1em 0.2em;
	margin: 0;
	display: inline-block;
}

%debug-label-list {
	font: 800 8px/120% $small_font;
	// text-transform: uppercase;
	letter-spacing: normal;
	// padding: 0.4em 0.8em;
	// margin: 0;

	border: 1px solid currentColor;
	border-radius: 0.2em;
	padding: 0.3em 0.5em 0.2em;
	margin: 0.5em;

	word-spacing: 12em;
	display: inline-block;
	width: 12em;
}

%debug-label-cartouche {
	font-size: 85%;
	font-weight: bolder;
	line-height: 1;
	text-transform: lowercase;
	white-space: nowrap;
	border: 1px solid currentColor;
	border-radius: 0.2em;
	padding: 0.3em 0.5em 0.2em;
	margin: 0.5em;
	display: inline-block;
}

// -----------------------------------
// .mdown
// -----------------------------------
@mixin _debugSelectorInContent($selectors...) {
	#{$selectors} {
		@content;
	}
	@each $sel in $selectors {
		#{$sel}::before {
			content: #{"\'"+$sel+"\'"};
		}
	}
}
.debug-mdown .mdown {
	@include _debugSelectorInContent(h1,h2,h3,h4,h5,h6,p,ol,ul,dl) {
		@include debug_outline(1px, solid, rgba($darkolivegreen, 0.9));
		background-color: rgba($darkolivegreen, 0.1);
		position: relative;
		&::before {
			@extend %debug-label-small;
			color: white;
			background: $darkolivegreen;
			position: absolute;
			right: 0;
			bottom: 0;
		}
	}
}

// debug-state
// -----------------------------------

%debug-attrs-left::after,
%debug-attrs-right::after {
	@extend %debug-label-list;
	color: white;
	background-color: rgba(royalblue, 0.75);
	position: absolute;
	z-index: 999;
	bottom: 0;
}
%debug-attrs-left::after {
	text-align: left;
	left: 0;
}
%debug-attrs-right::after {
	text-align: right;
	right: 0;
}

%debug-view-cid::after {
	content: attr(data-cid) " " attr(data-mcid) " " attr(class);
}
%debug-attrs-class::after {
	content: attr(class);
}

.debug-state {
	&::after {
		content: attr(last-route) " âžž " attr(current-route);
		@extend %debug-label-cartouche;
		opacity: 0.4;
		position: fixed;
		bottom: 0;
		left: 0;
	}

	.carousel {
		@extend %debug-attrs-right;
		@extend %debug-view-cid;
	}

	.media-item {
		@include debug_outline(1px, dashed, royalblue, -1px);
		@extend %debug-attrs-right;
		@extend %debug-view-cid;
		.content {
			@extend %debug-attrs-right;
			@extend %debug-attrs-class;
		}
	}
	.selected + .media-item {
		@extend %debug-attrs-left;
		@extend %debug-view-cid;
		.content {
			@extend %debug-attrs-class;
		}
	}
}
