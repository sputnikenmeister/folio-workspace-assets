// ------------------------------------
// Media Queries
// ------------------------------------

@mixin media($names) {
	$selector: "";
	@each $name in $names {
		@if type-of($name) == "string" {
			$selector: $selector + "." + $name;
		} @else {
			@error "A string is required but #{type-of($name)} was passed instead: `#{$name}`";
		}
	}
	@at-root #{#{$selector} &} {
		@content;
	}
}

@mixin list_breakpoints() {
	@each $key in map-keys($breakpoints) {
		@media #{map-get($breakpoints, $key)} {
			.breakpoint::after {
				content: #{"\'" + $key + "\'"};
			}
		}
		.#{$key} .breakpoint::after {
			content: #{"\'" + $key + "\'"};
		}
	}
}

/*
$breakpoints: (
	"unsupported": "not screen and (min-device-width: 768px) and (min-device-height: 768px)",
	"mobile": "only screen and (min-device-width: 320px) and (max-device-width: 480px)",
	"mobile-landscape": "only screen and (min-width: 321px)",
	"mobile-portrait": "only screen and (max-width: 320px)",
	"tablet-landscape": "only screen and (min-device-width: 768px) " +
		"and (max-device-width: 1024px) and (orientation: landscape)",
	"tablet-portrait": "only screen and (min-device-width: 768px) " +
		"and (max-device-width: 1024px) and (orientation: portrait)",
	"tablet": "only screen and (min-device-width: 768px) and (max-device-width: 1024px)",
	"desktop-small": "only screen and (min-width: 1024px)",
	"desktop-medium": "only screen and (min-width: 1224px)",
	"desktop-large": "only screen and (min-width: 1824px)",
	"iphone4": "only screen and (min-device-pixel-ratio: 1.5)"
);
.test:after {
	content: quote(inspect(map-get($breakpoints, "unquoted")));
}
*/
