.carousel.animate > .image-item {
	transform: translate3d(0, 0, 0);
	// transition: all 0.4s;
}

.carousel * {
	user-select: none;
	cursor: default;
}
// States for .image-item: .idle > .pending > [ .done | .error ]
.image-item {
	&.idle {
		display: none;
	}
	// Common size
	@mixin image-content-size() {
		position: absolute;
		display: block;
		box-sizing: border-box;
		left: $page-margin-left;
		width: $page-width - $page-margin-left - $page-margin-right;
	}
	// Image
	img {
		// *** mutable properties: must be in the first matching rule
		border: 0 none;
		background-color: transparent;
		box-shadow: 0 1rem 1rem -0.5rem hsla(0, 0%, 0%, 0.5);
		@include image-content-size();
	}
	&.idle img {
		display: none;
	}
	&.pending img {
		visibility: hidden;
		opacity: 0;
	}
	&.done img {
		transition: opacity $duration $duration;
		visibility: visible;
		opacity: 1;
	}
	&.error img {
		display: none;
	}
	// Placeholder
	.placeholder {
		// *** mutable properties: must be in the first matching rule
		border: 1px solid transparent;
		color: $background-color;
		@include image-content-size();
	}
	&.done .placeholder {
		transition: visibility $duration $duration step-end;
		visibility: hidden;
	}
	//&.error .placeholder {}

	// Placeholder label
	@mixin placeholder-message {
		font-size: 5rem;
		font-weight: 600;
		font-style: italic;
		text-transform: uppercase;
		letter-spacing: -0.05em;
		// Centering
		text-align: center;
		position: absolute;
		line-height: 1;
		top: 50%;
		width: 100%;
		margin-top: -0.5em;
		// just in case
		overflow: hidden;
		white-space: nowrap;
	}
	&.pending .placeholder:after,
	&.error .placeholder:after {
		@include placeholder-message();
	}
	&.pending .placeholder:after {
		content: "Loading";
	}
	&.error .placeholder:after {
		content: "Error";
	}
}
